1 - crie um link simbolico para que os arquivos possam ser acessados pelo publico.
php artisan storage:link
esse liink da pasta storage vai ser criado na pasta public

2 - dentro do link storage que foi criado dentro do public, crie uma pasta para imagens

3 - no migrations
$table->string('arquivo'); 

4 - no blade
 <div class="custom-file container mt-3 mb-3">
            <input type="file" class="custom-file-input" id="arquivo" name="arquivo">
            <label class="custom-file-label" for="arquivo">Escolha um arquivo</label>
</div>

5 -  no controller store

$path = $request->file('arquivo')->store('imagens','public'); ------ aqui o caminho da imagem
$post = new Post();
$post->email = $request->input('email');
$post->mensagem = $request->input('mensagem');
$post->arquivo = $path;                                     -------- aqui para salvar a imagem
$post->save();
return redirect('/');

6 - no blade para acessar a imagem
<img class="card-img-top figure-img img-fluid rounded" src="/storage/{{$post->arquivo}}">

7 - escrever isso no controller
use Illuminate\Support\Facades\Storage;

8 - colocar isso dentro da tag form
enctype="multipart/form-data"

Para Deletar arquivos

9 - no controller
public function destroy($id)
    {
        $post = Post::find($id);
        if(isset($post)) {
            $arquivo = $post->arquivo;                 // pega o arquivo(imagem) 
            Storage::disk('public')->delete($arquivo); // função storage acessa o disk public e delete o $arquivo, isso para não ficar imagem armazenada sem necessidade
            $post->delete();
        }
        return redirect('/');
    }

10 - no view, escrever assim para apagar a imagem, inves de um delete simples, precisa de um form
<form method="post" action="/{{$post->id}}">
    @csrf // todo formulario precisa ter um csrf
    <input type="hidden" name="_method" value="delete">
    <button type="submit" class="btn btn-sm btn-outline-danger">Apagar</button>
</form>

Para fazer o download

11 - rota
Route::get('/download/{id}','PostController@download');

12 -  controller, fazer uma nova função
 public function download($id)
    {
        $post = Post::find($id);
        if(isset($post)){
            $path = Storage::disk('public')->getDriver()->getAdapter()->applyPathPrefix($post->arquivo);
            return response()->download($path);
        }
        return redirect('/');
    }


13 - view
<a type="button" class="btn btn-sm btn-outline-secondary" href="/download/{{$post->id}}">Download</a>
